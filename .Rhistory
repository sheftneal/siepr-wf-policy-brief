#  polygon(px2, py2, border = add.alpha('black', .5), col ='gray60',lwd=1)
polygon(px3, py3, border = add.alpha('black', .5), col = 'gray60',lwd=1)
# polygon(px3, py3, border = add.alpha('black', .25), col =wes_palette("Darjeeling1",5)[2],lwd=1)
# polygon(px2, py2, border = add.alpha('white', .5), col =wes_palette("Darjeeling1",5)[1],lwd=1)
# polygon(px1, py1, border = add.alpha('white', .5), col =wes_palette("Darjeeling1",5)[3],lwd=1)
axis(1, at = seq(1985,2020,5))
axis(2, tick = T, las = 2, at = seq(0,1,0.2),labels= paste(seq(0,100,20),"%",sep=""))
mtext(side = 2, text = "% of total burned area",line=3.5)
dev.off()
pdf(file="figures/fig3-raw.pdf",width=12,height=4,useDingbats = F)
par(mfrow = c(1,2))
par(mar = c(3,5,3,3))
cab <- read_csv("data/fig2/caBurnedArea.csv") %>%  dplyr::filter(!is.na(year))
#  px1 <- c(pdat$year,  rev(pdat$year)[1], pdat$year[1])
#  py1 <- c(pdat$acre_fed,0,0)
#
#  px2 <- c(pdat$year[1], pdat$year, rev(pdat$year))
#  py2 <- c( pdat$acre_fed[1], pdat$acre_fed + pdat$acre_calfire+pdat$acre_loc, rev(pdat$acre_fed))
#
#  #px3 <- c(pdat$year[1], pdat$year, rev(pdat$year))
#  #py3 <- c( (pdat$acre_fed + pdat$acre_calfire)[1], (pdat$acre_fed + pdat$acre_calfire)+ pdat$acre_loc, rev(pdat$acre_fed + pdat$acre_calfire))
#
#  plot(1,1, col = NA, xlim = c(1985,2020), ylim = c(0,5), axes =F, xlab = "",ylab ="")
# # polygon(px3, py3, border = add.alpha('black', .5), col = 'gray30',lwd=1)
#  polygon(px2, py2, border = add.alpha('black', .5), col ='gray60',lwd=1)
#  polygon(px1, py1, border = add.alpha('black', .5), col ='gray90',lwd=1)
#  # polygon(px3, py3, border = add.alpha('black', .25), col =wes_palette("Darjeeling1",5)[2],lwd=1)
#  # polygon(px2, py2, border = add.alpha('white', .5), col =wes_palette("Darjeeling1",5)[1],lwd=1)
#  # polygon(px1, py1, border = add.alpha('white', .5), col =wes_palette("Darjeeling1",5)[3],lwd=1)
#  axis(1, at = seq(1985,2020,5))
#  axis(2, tick = T, las = 2, at = seq(0,5,1))
#  mtext(side = 2, text = "Burned Area (million ha)",line=3.5)
#
#panel b: total burned area
ba <- read_csv("data/fig3/FedBurnedArea.csv")
ba[,2:4]<-ba[,2:4]*0.404686/1e6
px1 <- c(ba$year,  rev(ba$year)[1], ba$year[1])
py1 <- c(ba$fire_nonfed,0,0)
px2 <- c(ba$year[1], ba$year, rev(ba$year))
py2 <- c( ba$fire_nonfed[1],ba$fire_all, rev(ba$fire_nonfed))
plot(ba$year, ba$fire_all, type ="l", xlim = c(1990,2020), ylim = c(0, 5),axes=F, xlab = "",ylab = "", col = NA)
polygon(px2, py2, border = add.alpha('black', .5), col ='gray60',lwd=1)
polygon(px1, py1, border = add.alpha('black', .5), col ='gray90',lwd=1)
axis(1, at = seq(1990,2020,5))
axis(2, tick = T, las = 2, at = seq(0,5,1))
mtext(side = 2, text = "Burned Area (million ha)",line=3.5)
lines(pdat$year[pdat$year>=1991], (pdat$acre_fed + pdat$acre_calfire+pdat$acre_loc)[pdat$year>=1991],lwd=1)
lines(pdat$year[pdat$year>=1991], (pdat$acre_fed )[pdat$year>=1991],lwd=1,lty=3)
rx <- read_csv("data/fig3/PerscribedBurnedArea.csv")
rx$share_nonfed <- rx$state_other/rx$total
rx$share_fed <- 1-rx$share_nonfed
rxsa <- read_csv("data/fig3/rx_SA.csv") %>% rename(fedSA = total)
rx <- left_join(rx, rxsa)
rx$share_SA <- rx$fedSA/(rx$total)
rx <- arrange(rx, year)
px1 <- c(rx$year,  rev(rx$year)[1], rx$year[1])
py1 <- c(rx$fedSA*0.404686/1e6,0,0)
px2 <- c(rx$year[1], rx$year, rev(rx$year))
py2 <- c( rx$fedSA[1]*0.404686/1e6,rx$total*0.404686/1e6, rev(rx$fedSA)*0.404686/1e6)
plot(rx$year, rx$total*0.404686/1e6, type ="l", xlim = c(1990,2020), ylim = c(0, 5),axes=F, xlab = "",ylab = "", col = NA)
polygon(px2, py2, border = add.alpha('black', .5), col ='gray60',lwd=1)
polygon(px1, py1, border = add.alpha('black', .5), col ='gray90',lwd=1)
axis(1, at = seq(1990,2020,5))
axis(2, tick = T, las = 2, at = seq(0,5,1))
mtext(side = 2, text = "Burned Area (million ha)",line=3.5)
dev.off()
######################## Option 2 pie chart
# The doughnut function permits to draw a donut plot
doughnut <-
function (x, labels = names(x), edges = 200, outer.radius = 0.8,
inner.radius=0.6, clockwise = FALSE,
init.angle = if (clockwise) 90 else 0, density = NULL,
angle = 45, col = NULL, border = FALSE, lty = NULL,add = F,
main = NULL, ...)
{
if (!is.numeric(x) || any(is.na(x) | x < 0))
stop("'x' values must be positive.")
if (is.null(labels))
labels <- as.character(seq_along(x))
else labels <- as.graphicsAnnot(labels)
x <- c(0, cumsum(x)/sum(x))
dx <- diff(x)
nx <- length(dx)
if(add != T){ plot.new()}
pin <- par("pin")
xlim <- ylim <- c(-1, 1)
if (pin[1L] > pin[2L])
xlim <- (pin[1L]/pin[2L]) * xlim
else ylim <- (pin[2L]/pin[1L]) * ylim
plot.window(xlim, ylim, "", asp = 1)
if (is.null(col))
col <- if (is.null(density))
palette()
else par("fg")
col <- rep(col, length.out = nx)
border <- rep(border, length.out = nx)
lty <- rep(lty, length.out = nx)
angle <- rep(angle, length.out = nx)
density <- rep(density, length.out = nx)
twopi <- if (clockwise)
-2 * pi
else 2 * pi
t2xy <- function(t, radius) {
t2p <- twopi * t + init.angle * pi/180
list(x = radius * cos(t2p),
y = radius * sin(t2p))
}
for (i in 1L:nx) {
n <- max(2, floor(edges * dx[i]))
P <- t2xy(seq.int(x[i], x[i + 1], length.out = n),
outer.radius)
polygon(c(P$x, 0), c(P$y, 0), density = density[i],
angle = angle[i], border = border[i],
col = col[i], lty = lty[i])
Pout <- t2xy(mean(x[i + 0:1]), outer.radius)
lab <- as.character(labels[i])
if (!is.na(lab) && nzchar(lab)) {
lines(c(1, 1.05) * Pout$x, c(1, 1.05) * Pout$y)
text(1.1 * Pout$x, 1.1 * Pout$y, labels[i],
xpd = TRUE, adj = ifelse(Pout$x < 0, 1, 0),
...)
}
## Add white disc
Pin <- t2xy(seq.int(0, 1, length.out = n*nx),
inner.radius)
polygon(Pin$x, Pin$y, density = density[i],
angle = angle[i], border = border[i],
col = "white", lty = lty[i])
}
title(main = main, ...)
invisible(NULL)
}
ba <- read_csv("data/fig3/FedBurnedArea.csv")
ba[,2:4]<-ba[,2:4]*0.404686/1e6
sharedat <- ba %>%
summarise(fire_bia = mean(fire_bia, na.rm = T), fire_blm = mean(fire_blm, na.rm = T), fire_fs = mean(fire_fs, na.rm = T), fire_fws = mean(fire_fws, na.rm = T), fire_nps = mean(fire_nps, na.rm =T), fire_state = mean(fire_state, na.rm = T)) %>%
mutate(fire_total = fire_bia + fire_blm + fire_fs + fire_fws + fire_nps + fire_state,
share_bia = fire_bia/fire_total,
share_blm = fire_blm/fire_total,
share_fs = fire_fs/fire_total,
share_fws = fire_fws/fire_total,
share_nps = fire_nps/fire_total,
share_state = fire_state/fire_total) %>%
dplyr::select(fire_total, share_state, share_blm, share_fs, share_fws, share_bia, share_nps)
sharerx <- rx %>% summarise(bia = mean(bia, na.rm = T), blm = mean(blm, na.rm = T), fws = mean(fws, na.rm = T), nps = mean(nps, na.rm = T), usfs = mean(usfs, na.rm = T), state = mean(state_other, na.rm = T), SA = mean(fedSA, na.rm = T)) %>%
mutate(total = bia + blm + fws + nps + state + usfs,
share_bia = bia/total,
share_blm = blm/total,
share_fws = fws/total,
share_usfs = usfs/total,
share_nps = nps/total,
share_state = state/total,
total_fed = bia + blm + fws + nps  + usfs,
share_sa = SA/total
) %>%
dplyr::select(total, total_fed, share_state, share_usfs, share_fws, share_blm, share_nps, share_bia, share_sa)
par(bg = "white")
par(mar = c(2,2,2,2))
par(mfrow = c(2,2))
r <- 10
base <- pi*r^2
doughnut(as.numeric(sharedat[2:7])  ,
inner.radius=0,outer.radius =1,
col=c('gray90', rep('gray30',5)) ,
main ="Wildfire Burned Area by Jurisdiction",
labels = paste(round(as.numeric(sharedat[2:7])*100, 1),"%",sep=""),
border = 'white')
r <- 10*(sharerx$total/sharedat$fire_total)
area <- pi*r^2
doughnut(as.numeric(sharerx[3:8])  ,
inner.radius=0,outer.radius = (sharerx$total/sharedat$fire_total),
col=c('gray90', rep('gray30',5)) ,
main ="Rx Burned Area by Jurisdiction",
labels = paste(round(as.numeric(sharerx[3:8])*100, 1),"%",sep=""),
border = 'white')
r <- 10*(sharerx$total/sharedat$fire_total)
area <- pi*r^2
doughnut(as.numeric(c(.223,.1864,.1420,.108,.0832,.0751,.05978,.0540,.04816,.0188)*100, 1)  ,
inner.radius=0,outer.radius = 1,
col=c('gray70', rep('gray30',9)) ,
main ="Wildfire Burned Area by Region",
labels = paste(round(c(.223,.1864,.1420,.108,.0832,.0751,.05978,.0540,.04816,.0188)*100, 1),"%",sep=""),
border = 'white')
r <- 10*(sharerx$total/sharedat$fire_total)
area <- pi*r^2
doughnut(as.numeric(c(.709,.084,.059,.040,.033,.02,.018,.006,.006)*100, 1)  ,
inner.radius=0,outer.radius = (sharerx$total/sharedat$fire_total),
col=c('gray70', rep('gray30',9)) ,
main ="Rx Burned Area by Region",
labels = paste(round(c(.709,.084,.059,.040,.033,.02,.018,.006,.006)*100, 1),"%",sep=""),
border = 'white')
sharedat
6014976*0.404686/1e6
rx
sharerx
2743593*0.404686/1e6
list.files("~/Documents/Data/GADM/")
load("~/Documents/Data/GADM/USA_adm2.RData")
state <- gadm; rm(gadm)
head(state@data)
load("~/Documents/Data/GADM/USA_adm1.RData")
state <- gadm; rm(gadm)
head(state@data)
write_csv(state@data$NAME_1, path ="data/fig3/stateList.csv")
write_csv(data.frame(state@data$NAME_1), path ="data/fig3/stateList.csv")
gacc <- rgdal::readOGR("data/fig3/National_GACC_Boundaries-shp/National_GACC_Current_20200226.shp")
dim(gacc@data)
head(gacc@data)
plot(gac)
plot(gacc)
axis(1)
axis(2)
bbox(gacc)
plot(gacc, xlim = c(-160,-50), ylim = c(10,70))
?pdf
pdf("figures/fig3-map.pdf", width = 6, height = 3)
par(mfrow = c(1,1))
plot(gacc, xlim = c(-160,-50), ylim = c(10,70), lwd = 0.5)
dev.off()
pdf("figures/fig3-map.pdf", width = 6, height = 3)
par(mfrow = c(1,1))
par(mar = c(0,0,0,0))
plot(gacc, xlim = c(-160,-50), ylim = c(10,70), lwd = 0.5)
dev.off()
par(bg = "white")
par(mar = c(2,2,2,2))
par(mfrow = c(2,2))
r <- 10
base <- pi*r^2
doughnut(as.numeric(sharedat[2:7])  ,
inner.radius=0,outer.radius =1,
col=c('gray90', rep('gray30',5)) ,
main ="Wildfire Burned Area by Jurisdiction",
labels = paste(round(as.numeric(sharedat[2:7])*100, 1),"%",sep=""),
border = 'white')
r <- 10*(sharerx$total/sharedat$fire_total)
area <- pi*r^2
doughnut(as.numeric(sharerx[3:8])  ,
inner.radius=0,outer.radius = (sharerx$total/sharedat$fire_total),
col=c('gray90', rep('gray30',5)) ,
main ="Rx Burned Area by Jurisdiction",
labels = paste(round(as.numeric(sharerx[3:8])*100, 1),"%",sep=""),
border = 'white')
r <- 10*(sharerx$total/sharedat$fire_total)
area <- pi*r^2
doughnut(as.numeric(c(.223,.1864,.1420,.108,.0832,.0751,.05978,.0540,.04816,.0188)*100, 1)  ,
inner.radius=0,outer.radius = 1,
col=c('gray70', rep('gray30',9)) ,
main ="Wildfire Burned Area by Region",
labels = paste(round(c(.223,.1864,.1420,.108,.0832,.0751,.05978,.0540,.04816,.0188)*100, 1),"%",sep=""),
border = 'white')
r <- 10*(sharerx$total/sharedat$fire_total)
area <- pi*r^2
doughnut(as.numeric(c(.709,.084,.059,.040,.033,.02,.018,.006,.006)*100, 1)  ,
inner.radius=0,outer.radius = (sharerx$total/sharedat$fire_total),
col=c('gray70', rep('gray30',9)) ,
main ="Rx Burned Area by Region",
labels = paste(round(c(.709,.084,.059,.040,.033,.02,.018,.006,.006)*100, 1),"%",sep=""),
border = 'white')
sharerx
wes_palette("Darjeeling1", n = 10)
wes_palette("Darjeeling1", n = 5)
col = wes_palette("Darjeeling1", n = 5)
col
?wes_palette
col = wes_palette("Darjeeling1", n = 10, type = "continuous")
col
wes_palette("Zissou1", n = 10, type = "continuous")
wes_palette("Zissou1", n = 6, type = "continuous")
wes_palette("Darjeeling1", n = 6, type = "continuous")
wes_palette("Darjeeling1", n = 2, type = "discrete")
wes_palette("Zissou1", n = 2, type = "discrete")
wes_palette("Darjeeling1", n = 2, type = "discrete")[1]
wes_palette("Darjeeling1", n = 2, type = "discrete")[2]
"coral"
col2rgb("coral")
?col2rgb
colorRampPalette("coral")
colorRampPalette("coral",1)
?colorRampPalette
colorRampPalette("coral")(1)
wes_palette("Zissou1", n = 10, type = "continous")
wes_palette("Zissou1", n = 10, type = "continuous")
wes_palette("Rushmore1", n = 10, type = "continuous")
wes_palette("Rushmore1", n = 5, type = "continuous")
wes_palette("Royal1", n = 5, type = "continuous")
wes_palette("Royal1", n = 5, type = "continuous")[1:5]
wes_palette("Rushmore1", n = 5, type = "continuous")[1:5]
wes_palette("Zissou1", n = 10, type = "continuous")[1:10]
colorRampPalette(colors = add.alpha(c("white","#63AD99","#BEBC48","#E66B33","#D92120"), 0.3))(10)
plot(1:10, rep(1, 10), cex=3, col =colorRampPalette(colors = add.alpha(c("white","#63AD99","#BEBC48","#E66B33","#D92120"), 0.3))(10) )
plot(1:10, rep(1, 10), cex=3, col =colorRampPalette(colors = add.alpha(c("white","#63AD99","#BEBC48","#E66B33","#D92120"), 0.3))(10) ,pch = 167)
plot(1:10, rep(1, 10), cex=3, col =colorRampPalette(colors = add.alpha(c("white","#63AD99","#BEBC48","#E66B33","#D92120"), 0.3))(10) ,pch = 16)
plot(1:10, rep(1, 10), cex=3, col =colorRampPalette(colors = add.alpha(c("white","#63AD99","#BEBC48","#E66B33","#D92120"), 1))(10) ,pch = 16)
plot(1:10, rep(1, 10), cex=3, col =colorRampPalette(colors = add.alpha(c(#63AD99","#BEBC48","#E66B33","#D92120"), 1))(10) ,pch = 16)
plot(1:10, rep(1, 10), cex=3, col =colorRampPalette(colors = add.alpha(c("#63AD99","#BEBC48","#E66B33","#D92120"), 1))(10) ,pch = 16)
plot(1:10, rep(1, 10), cex=3, col =colorRampPalette(colors = add.alpha(c("navy","#63AD99","#BEBC48","#E66B33","#D92120"), 1))(10) ,pch = 16)
colorRampPalette(colors = add.alpha(c("navy","#63AD99","#BEBC48","#E66B33","#D92120"), 1))(10)
source("scripts/loadFunctions.R")
source("scripts/loadPackages.R")
yr <- 2015:2020
pmca <- pmor <- pmwa <- list()
#CA
for (y in 1:length(yr)){  pmca[[y]] <- read_csv(paste("data/fig1/CApm",yr[y],".csv",sep=""))  }
pmca <- data.frame(data.table::rbindlist(pmca))
#WA
for (y in 1:length(yr)){  pmwa[[y]] <- read_csv(paste("data/fig1/WApm",yr[y],".csv",sep=""))  }
pmwa <- data.frame(data.table::rbindlist(pmwa))
#OR
for (y in 1:length(yr)){  pmor[[y]] <- read_csv(paste("data/fig1/ORpm",yr[y],".csv",sep=""))  }
pmor <- data.frame(data.table::rbindlist(pmor))
all.equal(names(pmca), names(pmwa))
all.equal(names(pmca), names(pmor))
pmwf <- rbind(pmca, pmwa, pmor)
names(pmwf) <- c("date","source","siteID","POC","pm25","units","aqi","site_name","daily_obs_count","perc_comp","aqs_parameter_code","aqs_parameter_desc","cbsa_code","cbsa_name","state_code","state","county_code","county","lat","lon")
#For each CBSA by day-of-year calculate the difference between 2020 PM and average PM over the past 5 years
pm_doy <- pmwf %>%
mutate(
year = as.numeric(format(as.Date(date, format = "%m/%d/%Y"), "%Y")),
dom =  as.numeric(format(as.Date(date, format = "%m/%d/%Y"), "%d")),
month =  as.numeric(format(as.Date(date, format = "%m/%d/%Y"), "%m")),
doy = as.numeric(format(as.Date(date, format = "%m/%d/%Y"), "%j")),
year = replace(year, year==20,2020), #CA 2020 date format is slightly diff so gets coded as 0020
period = "pre", period = replace(period, year == "2020", "post" ) #divided into groups 2015-2019 vs 2020
) %>%
dplyr::filter(doy %in% 214:259 & !is.na(cbsa_name)) %>% #restrict to period of 2020 wildfires thus far
group_by(cbsa_name, period,  doy) %>% #collapse to pre (2015-2019) and post (2020) periods
summarise(pm25 = mean(pm25, na.rm = T)) %>%
pivot_wider(names_from = period, values_from = pm25) %>%
mutate(pm25_diff = post - pre)
#figure out second axis
pm_doy <- dplyr::filter(pm_doy,cbsa_name %in%  c("Seattle-Tacoma-Bellevue, WA","Portland-Vancouver-Hillsboro, OR-WA","Sacramento--Roseville--Arden-Arcade, CA","San Francisco-Oakland-Hayward, CA","Los Angeles-Long Beach-Anaheim, CA"))
pm_doy <- pm_doy %>% mutate(excess_mort = pm25_diff*0.68)
#pop by age
pop <- read_csv("data/fig1/ACSST1Y2019.S0101_cbsa_pop_by_age_group.csv")
popvars <- pop[1,]
pop <- pop[2:nrow(pop),]
pop <- pop[,c(2,which(popvars == "Estimate!!Total!!Total population!!SELECTED AGE CATEGORIES!!65 years and over"))]
pop <- as.data.frame(pop) %>% rename(pop = S0101_C01_030E) %>% rename(cbsa_name = NAME)
pop$cbsa_name <- sort(c("Seattle-Tacoma-Bellevue, WA","Portland-Vancouver-Hillsboro, OR-WA","Sacramento--Roseville--Arden-Arcade, CA","San Francisco-Oakland-Hayward, CA","Los Angeles-Long Beach-Anaheim, CA"))
pop$pop <- as.numeric(pop$pop)
pop$pop <- pop$pop/1e6 #convert to millions of people since rates per millioin
head(pop)
14548+70/14548
(14548+70)/14548
head(pm_doy)
filter(p_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA")
filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA")
filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>% dplyr::select(pm25_diff) %>% summary()
filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>% dplyr::select(pm25_diff)
filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>%ungroup() %>%  dplyr::select(pm25_diff)
filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>%ungroup() %>%  dplyr::select(pm25_diff) %>% as.numeric()
filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist() %>% as.numeric()
LOC ="Seattle-Tacoma-Bellevue, WA"
pop$pop[pop$cbsa_name==LOC])
pop$pop[pop$cbsa_name==LOC]
sum(pm_doy$pm25_diff[pm_doy$cbsa_name==LOC]))
sum(pm_doy$pm25_diff[pm_doy$cbsa_name==LOC])
round((.68*pop$pop[pop$cbsa_name==LOC])*sum(pm_doy$pm25_diff[pm_doy$cbsa_name==LOC]))
14548*(.89/100)
1-exp(-(.0089*100))
(1-exp(-(.0089*100)))*14548
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
x
length(x)
sum(x>0)
length(x)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>%ungroup()
x
tail(x)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA") %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
sum(x)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy<250) %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
sum(x)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy<250 & pm25_diff>0) %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
x
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy<250 & pm25_diff>0) %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
x
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy<250 & pm25_diff>0) %>%ungroup()
x
sum(x$pm25_diff)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy<259 & pm25_diff>0) %>%ungroup()
sum(x)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy<259 & pm25_diff>0) %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
x
sum(x)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy<259) %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
sum(x)
round((.68*pop$pop[pop$cbsa_name==LOC])*sum(pm_doy$pm25_diff[pm_doy$cbsa_name==LOC]))
round((.68*pop$pop[pop$cbsa_name==LOC])*453)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy<258) %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
x
sum(x)
round((.68*pop$pop[pop$cbsa_name==LOC])*298
)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy %in% 251:259) %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
x
sum(x)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy <=259) %>%ungroup() %>%  dplyr::select(pm25_diff) %>% unlist()
x
sum(x)
max(pm_doy$doy)
x= filter(pm_doy, cbsa_name == "Seattle-Tacoma-Bellevue, WA" & doy <=259)
x
data.frame(x)
source("scripts/loadFunctions.R")
source("scripts/loadPackages.R")
yr <- 2015:2020
pmca <- pmor <- pmwa <- list()
#not positive every state has same format so load and check separately
#CA
for (y in 1:length(yr)){  pmca[[y]] <- read_csv(paste("data/fig1/CApm",yr[y],".csv",sep=""))  }
pmca <- data.frame(data.table::rbindlist(pmca))
#WA
for (y in 1:length(yr)){  pmwa[[y]] <- read_csv(paste("data/fig1/WApm",yr[y],".csv",sep=""))  }
pmwa <- data.frame(data.table::rbindlist(pmwa))
#OR
for (y in 1:length(yr)){  pmor[[y]] <- read_csv(paste("data/fig1/ORpm",yr[y],".csv",sep=""))  }
pmor <- data.frame(data.table::rbindlist(pmor))
all.equal(names(pmca), names(pmwa))
all.equal(names(pmca), names(pmor))
pmwf <- rbind(pmca, pmwa, pmor)
names(pmwf) <- c("date","source","siteID","POC","pm25","units","aqi","site_name","daily_obs_count","perc_comp","aqs_parameter_code","aqs_parameter_desc","cbsa_code","cbsa_name","state_code","state","county_code","county","lat","lon")
#For each CBSA by day-of-year calculate the difference between 2020 PM and average PM over the past 5 years
pm_doy <- pmwf %>%
mutate(
year = as.numeric(format(as.Date(date, format = "%m/%d/%Y"), "%Y")),
dom =  as.numeric(format(as.Date(date, format = "%m/%d/%Y"), "%d")),
month =  as.numeric(format(as.Date(date, format = "%m/%d/%Y"), "%m")),
doy = as.numeric(format(as.Date(date, format = "%m/%d/%Y"), "%j")),
year = replace(year, year==20,2020), #CA 2020 date format is slightly diff so gets coded as 0020
period = "pre", period = replace(period, year == "2020", "post" ) #divided into groups 2015-2019 vs 2020
) %>%
dplyr::filter(doy %in% 214:259 & !is.na(cbsa_name)) %>% #restrict to period of 2020 wildfires thus far
group_by(cbsa_name, period,  doy) %>% #collapse to pre (2015-2019) and post (2020) periods
summarise(pm25 = mean(pm25, na.rm = T)) %>%
pivot_wider(names_from = period, values_from = pm25) %>%
mutate(pm25_diff = post - pre)
#figure out second axis
pm_doy <- dplyr::filter(pm_doy,cbsa_name %in%  c("Seattle-Tacoma-Bellevue, WA","Portland-Vancouver-Hillsboro, OR-WA","Sacramento--Roseville--Arden-Arcade, CA","San Francisco-Oakland-Hayward, CA","Los Angeles-Long Beach-Anaheim, CA"))
pm_doy <- pm_doy %>% mutate(excess_mort = pm25_diff*0.68)
#pop by age
pop <- read_csv("data/fig1/ACSST1Y2019.S0101_cbsa_pop_by_age_group.csv")
popvars <- pop[1,]
pop <- pop[2:nrow(pop),]
pop <- pop[,c(2,which(popvars == "Estimate!!Total!!Total population!!SELECTED AGE CATEGORIES!!65 years and over"))]
pop <- as.data.frame(pop) %>% rename(pop = S0101_C01_030E) %>% rename(cbsa_name = NAME)
pop$cbsa_name <- sort(c("Seattle-Tacoma-Bellevue, WA","Portland-Vancouver-Hillsboro, OR-WA","Sacramento--Roseville--Arden-Arcade, CA","San Francisco-Oakland-Hayward, CA","Los Angeles-Long Beach-Anaheim, CA"))
pop$pop <- as.numeric(pop$pop)
pop$pop <- pop$pop/1e6 #convert to millions of people since rates per millioin
LOC = "Los Angeles-Long Beach-Anaheim, CA"
plot(pm_doy$doy[pm_doy$cbsa_name==LOC], pm_doy$pm25_diff[pm_doy$cbsa_name==LOC], axes = F, xlab = "", ylab = "",type = "l",lwd =2, col = NA, ylim = c(-25,340))
polygon(c(pm_doy$doy[pm_doy$cbsa_name==LOC],pm_doy$doy[pm_doy$cbsa_name==LOC][length(pm_doy$doy[pm_doy$cbsa_name==LOC])], pm_doy$doy[pm_doy$cbsa_name==LOC][1]), c(pm_doy$pm25_diff[pm_doy$cbsa_name==LOC], 0, 0), col = add.alpha('red', 0.65), lwd = 0.25)
par(mar = c(1,1))
par(mfrow = c(1,1))
plot(pm_doy$doy[pm_doy$cbsa_name==LOC], pm_doy$pm25_diff[pm_doy$cbsa_name==LOC], axes = F, xlab = "", ylab = "",type = "l",lwd =2, col = NA, ylim = c(-25,340))
polygon(c(pm_doy$doy[pm_doy$cbsa_name==LOC],pm_doy$doy[pm_doy$cbsa_name==LOC][length(pm_doy$doy[pm_doy$cbsa_name==LOC])], pm_doy$doy[pm_doy$cbsa_name==LOC][1]), c(pm_doy$pm25_diff[pm_doy$cbsa_name==LOC], 0, 0), col = add.alpha('red', 0.65), lwd = 0.25)
axis(2)
ba <- read_csv("data/fig3/FedBurnedArea.csv")
ba[,2:4]<-ba[,2:4]*0.404686/1e6
sharedat <- ba %>%
summarise(fire_bia = mean(fire_bia, na.rm = T), fire_blm = mean(fire_blm, na.rm = T), fire_fs = mean(fire_fs, na.rm = T), fire_fws = mean(fire_fws, na.rm = T), fire_nps = mean(fire_nps, na.rm =T), fire_state = mean(fire_state, na.rm = T)) %>%
mutate(fire_total = fire_bia + fire_blm + fire_fs + fire_fws + fire_nps + fire_state,
share_bia = fire_bia/fire_total,
share_blm = fire_blm/fire_total,
share_fs = fire_fs/fire_total,
share_fws = fire_fws/fire_total,
share_nps = fire_nps/fire_total,
share_state = fire_state/fire_total) %>%
dplyr::select(fire_total, share_state, share_blm, share_fs, share_fws, share_bia, share_nps)
sharerx <- rx %>% summarise(bia = mean(bia, na.rm = T), blm = mean(blm, na.rm = T), fws = mean(fws, na.rm = T), nps = mean(nps, na.rm = T), usfs = mean(usfs, na.rm = T), state = mean(state_other, na.rm = T), SA = mean(fedSA, na.rm = T)) %>%
mutate(total = bia + blm + fws + nps + state + usfs,
share_bia = bia/total,
share_blm = blm/total,
share_fws = fws/total,
share_usfs = usfs/total,
share_nps = nps/total,
share_state = state/total,
total_fed = bia + blm + fws + nps  + usfs,
share_sa = SA/total
) %>%
dplyr::select(total, total_fed, share_state, share_usfs, share_fws, share_blm, share_nps, share_bia, share_sa)
sharedat
rx <- read_csv("data/fig3/PerscribedBurnedArea.csv")
rx$share_nonfed <- rx$state_other/rx$total
rx$share_fed <- 1-rx$share_nonfed
rxsa <- read_csv("data/fig3/rx_SA.csv") %>% rename(fedSA = total)
rx <- left_join(rx, rxsa)
rx$share_SA <- rx$fedSA/(rx$total)
rx <- arrange(rx, year)
sharerx <- rx %>% summarise(bia = mean(bia, na.rm = T), blm = mean(blm, na.rm = T), fws = mean(fws, na.rm = T), nps = mean(nps, na.rm = T), usfs = mean(usfs, na.rm = T), state = mean(state_other, na.rm = T), SA = mean(fedSA, na.rm = T)) %>%
mutate(total = bia + blm + fws + nps + state + usfs,
share_bia = bia/total,
share_blm = blm/total,
share_fws = fws/total,
share_usfs = usfs/total,
share_nps = nps/total,
share_state = state/total,
total_fed = bia + blm + fws + nps  + usfs,
share_sa = SA/total
) %>%
dplyr::select(total, total_fed, share_state, share_usfs, share_fws, share_blm, share_nps, share_bia, share_sa)
sharerx
ba <- read_csv("data/fig3/FedBurnedArea.csv")
ba[,2:4]<-ba[,2:4]*0.404686/1e6
ba
mean(ba$fire_total)
mean(ba$fire_total)*0.404686/1e6
rx
mean(rx$total)
mean(rx$total)*0.404686/1e6
